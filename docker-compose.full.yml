version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16
    container_name: productmanagement-postgres
    environment:
      POSTGRES_DB: productmanagement
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Service
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: api
    container_name: productmanagement-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__productmanagement=Host=postgres;Port=5432;Database=productmanagement;Username=postgres;Password=postgres;
    ports:
      - "5595:8081"
    depends_on:
      postgres:
        condition: service_healthy

  # Web Application  
  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: web
    container_name: productmanagement-web
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - services__apiservice__https__0=https://api:8081
      - services__apiservice__http__0=http://api:8081
    ports:
      - "5062:8080"
    depends_on:
      - api

  # pgAdmin (Optional)
  pgadmin:
    image: dpage/pgadmin4:8.12
    container_name: productmanagement-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    depends_on:
      - postgres

volumes:
  postgres_data:
